{"remainingRequest":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Graphe.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Graphe.vue","mtime":1584398231025},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847125793},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js","mtime":1583847125770},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js","mtime":1583847126586},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847125793},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js","mtime":1583847126556}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Graphe.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <svg id=\"histogramme_temp\">\n  </svg>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nexport default {\n  name: 'vue-line-chart',\n  data: () => ({\n      data: undefined,\n      timer: undefined,\n      nb_zones: undefined,\n      temp_seuils: undefined,\n      margeX: 30,\n      margeY: 20,\n      Largeur_graphe: undefined,\n      Hauteur_graphe: undefined,\n      Espacement_barres: 10,\n      Largeur_barres: undefined,\n      tab_zones: undefined,\n    }),\n  mounted() {\n    this.get_config();\n  },\n  destroyed: function(){\n    clearInterval(this.timer);\n  },\n  watch:{\n    data: function(){\n      // this.createGraph();\n      this.update();\n    },\n    tab_zones: function(){\n      this.get_temp_seuil();\n    },\n    temp_seuils: function(){\n      this.Largeur_graphe = this.nb_zones*100 + this.margeX;\n      this.Hauteur_graphe = d3.max(this.temp_seuils) + 100;\n      this.Largeur_barres = this.Largeur_graphe/this.nb_zones;\n      this.changeData();\n      this.timer = setInterval(this.changeData, 1000);\n    }\n  },\n  methods: {\n    get_temp_seuil(){\n      let data_to_send = [\"get_configuration_courante\"];\n      let headers = {'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n            'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n      fetch(\"http://localhost:3000\", {\n        method: 'post',\n        headers,\n        body: JSON.stringify(data_to_send)\n      })\n      .then(res=> res.json())\n      .then(data => {\n        if(data[1] === null){\n          this.temp_seuils = new Array(this.nb_zones);\n          for(let i=0; i<this.nb_zones; i++){\n            this.temp_seuils[i] = 100;\n          }\n        }\n        else{\n          this.temp_seuils = data[1].zone_chauffe;\n        }\n      });\n    },\n    get_config(){\n      let data_to_send = [\"get_specifications_thermo\"];\n      let headers = {'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n            'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n      fetch(\"http://localhost:3000\", {\n        method: 'post',\n        headers,\n        body: JSON.stringify(data_to_send)\n      })\n      .then(res=> res.json())\n      .then(data => {\n        this.nb_zones = data[1].nb_zones;\n        this.tab_zones = data[1].nom_zone_chauffe;\n      });\n    },\n    changeData(){\n\n      let data_to_send = [\"get_temperature\"];\n      let headers = {'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n            'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n      fetch(\"http://localhost:3000\", {\n        method: 'post',\n        headers,\n        body: JSON.stringify(data_to_send)\n      })\n      .then(res=> res.json())\n      .then(data => {\n        this.data = data[1].zone_chauffe;\n      });\n    },\n    dessiner_histogramme(){\n      var nb_zones = this.data.length;\n      var margeX = this.margeX;\n      var margeY = this.margeY;\n      var Largeur_graphe = nb_zones*this.Largeur_barres + margeX;\n      var Hauteur_graphe = d3.max(this.temp_seuils)*1.5 + margeY;\n      var Espacement_barres = this.Espacement_barres;\n      var Largeur_barres = (Largeur_graphe / nb_zones);\n\n      var tab_zones = this.tab_zones;\n\n      var AxeY = d3.scaleLinear()\n          .domain([Hauteur_graphe,0])\n          .range([0,Hauteur_graphe])\n\n      var AxeX = d3.scaleBand()\n          .domain(tab_zones)\n          .range([0,Largeur_graphe])\n\n      var svg = d3.select('#histogramme_temp')\n          .attr(\"width\", Largeur_graphe+margeX)\n          .attr(\"height\", Hauteur_graphe);\n\n      var temp_ok = this.temp_bleues();\n      var temp_pas_ok = this.temp_rouges();\n\n      svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\"+margeX+\",\"+ -margeY +\")\")\n      .call(d3.axisLeft(AxeY));\n\n      svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\"+ margeX +\",\"+(Hauteur_graphe-margeY)+\")\")\n      .call(d3.axisBottom(AxeX));\n\n\n      svg.selectAll(\"graphe_rouge\")\n                  .data(temp_pas_ok)\n                  .enter()\n                  .append(\"rect\")\n                  .attr(\"fill\", \"red\")\n                  .attr(\"y\", function(d) {\n                      return Hauteur_graphe - d;\n                  })\n                  .attr(\"x\", function() {\n                      return Espacement_barres;\n                  })\n                  .attr(\"height\", function(d) {\n                      return d;\n                  })\n                  .attr(\"width\", Largeur_barres - Espacement_barres)\n                  .attr(\"transform\", function (d, i) {\n                      var translate = [(Largeur_barres * i) + margeX, -margeY];\n                      return \"translate(\"+ translate +\")\";\n                  });\n\n      svg.selectAll(\"graphe_bleu\")\n                  .data(temp_ok)\n                  .enter()\n                  .append(\"rect\")\n                  .attr(\"fill\", \"steelblue\")\n                  .attr(\"y\", function(d) {\n                      return Hauteur_graphe - d;\n                  })\n                  .attr(\"x\", function() {\n                      return Espacement_barres;\n                  })\n                  .attr(\"height\", function(d) {\n                      return d;\n                  })\n                  .attr(\"width\", Largeur_barres - Espacement_barres)\n                  .attr(\"transform\", function (d, i) {\n                      var translate = [(Largeur_barres * i) + margeX, -margeY];\n                      return \"translate(\"+ translate +\")\";\n                  });\n\n    },\n    temp_bleues(){\n    var tab = [];\n    for(var i = 0; i < this.nb_zones; i++){\n        if(this.data[i] <= this.temp_seuils[i]){\n            tab.push(this.data[i]);\n        }\n        else{\n            tab.push(this.temp_seuils[i]);\n        }\n    }\n    return tab;\n    },\n    temp_rouges(){\n      var tab = [];\n      for(var i = 0; i < this.nb_zones; i++){\n          if(this.data[i] > this.temp_seuils[i]){\n              tab.push(this.data[i]);\n          }\n          else{\n              tab.push(0);\n          }\n      }\n      return tab;\n    },\n    update(){\n      var svg = d3.select(\"svg\");\n      svg.selectAll(\"*\").remove();\n      this.dessiner_histogramme();\n    }\n  },\n};\n</script>\n\n<style scoped>\n  svg{\n    margin: 25px;\n  }\n  path{\n    fill: none;\n    stroke: #76BF8A;\n    stroke-width: 3px;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}