{"remainingRequest":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/src/components/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/src/components/Main.vue","mtime":1583849616925},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847268784},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js","mtime":1583847268349},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js","mtime":1583847286507},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847268784},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js","mtime":1583847286091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBHcmFwaGUgZnJvbSAnLi9HcmFwaGUudnVlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hlbGxvV29ybGQnLAogIGNvbXBvbmVudHM6IHsKICAgIEdyYXBoZSwKICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICB0aW1lcjogdW5kZWZpbmVkLAogICAgc3RhdHV0OiAiQXJyw6p0IiwKICB9CiAgKSwKICBtb3VudGVkKCkgewogICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKHRoaXMuZ2V0X3N0YXR1dCwgMTAwMCk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uKCl7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOwogIH0sCiAgbWV0aG9kczp7CiAgICBzdGFydCgpewogICAgICBsZXQgZGF0YV90b19zZW5kID0geyJ0eXBlIjogInNldCJ9OwogICAgICBsZXQgaGVhZGVycyA9IHsnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLAogICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcyc6ICdQT1NULCBHRVQsIFBVVCwgT1BUSU9OUywgREVMRVRFJywKICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOiAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcywgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luLCBPcmlnaW4sIEFjY2VwdCwgQ29udGVudC1UeXBlJywKICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgfQogICAgICBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL3N0YXJ0IiwgewogICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgIGhlYWRlcnMsCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YV90b19zZW5kKQoKICAgICAgfSkKICAgICAgLnRoZW4ocmVzPT4gcmVzLmpzb24oKSkKICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZGF0YSkpOwogICAgICAgIAogICAgICB9KTsKICAgIH0sCiAgICBnZXRfc3RhdHV0KCl7CiAgICAgIGxldCBkYXRhX3RvX3NlbmQgPSB7InR5cGUiOiAiZ2V0In07CiAgICAgIGxldCBoZWFkZXJzID0geydBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicsCiAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJzogJ1BPU1QsIEdFVCwgUFVULCBPUFRJT05TLCBERUxFVEUnLAogICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycyc6ICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzLCBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4sIE9yaWdpbiwgQWNjZXB0LCBDb250ZW50LVR5cGUnLAogICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICB9CiAgICAgIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAvc3RhdHV0IiwgewogICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgIGhlYWRlcnMsCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YV90b19zZW5kKQoKICAgICAgfSkKICAgICAgLnRoZW4ocmVzPT4gcmVzLmpzb24oKSkKICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgLy9jb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShkYXRhKSk7CiAgICAgICAgaWYoZGF0YS5kYXRhLnN0YXR1dCA9PSAxKQogICAgICAgICAgdGhpcy5zdGF0dXQgPSAiRW4gY291cnMiOwogICAgICAgIGVsc2UgCiAgICAgICAgICB0aGlzLnN0YXR1dCA9ICJBcnLDqnQiOwogICAgICB9KTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container text-center>\n    <v-row>\n      <v-col cols=\"3\">\n      </v-col>\n      <v-col cols=\"6\">\n        <v-card outlined>\n          <h1>Nom du Preset</h1>\n        </v-card>\n      </v-col>\n      <v-col cols=\"3\">\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"1\">\n      </v-col>\n      <v-col cols=\"6\">\n        <Graphe/>\n      </v-col>\n      <v-col cols=\"2\">\n      </v-col>\n      <v-col cols=\"3\">\n        <v-btn dark x-large fab right color=\"green\" @click=\"start()\">\n          <v-icon>mdi-play</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"1\">\n      </v-col>\n      <v-col cols=\"6\">\n        <v-card outlined>\n          <h1>Statut</h1>\n        </v-card>\n      </v-col>\n      <v-col cols=\"3\">\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import Graphe from './Graphe.vue'\n  export default {\n    name: 'HelloWorld',\n    components: {\n      Graphe,\n    },\n    data: () => ({\n      timer: undefined,\n      statut: \"Arrêt\",\n    }\n    ),\n    mounted() {\n      this.timer = setInterval(this.get_statut, 1000);\n    },\n    destroyed: function(){\n      clearInterval(this.timer);\n    },\n    methods:{\n      start(){\n        let data_to_send = {\"type\": \"set\"};\n        let headers = {'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n              'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        fetch(\"http://localhost:3000/start\", {\n          method: 'post',\n          headers,\n          body: JSON.stringify(data_to_send)\n\n        })\n        .then(res=> res.json())\n        .then(data => {\n          console.log(JSON.stringify(data));\n          \n        });\n      },\n      get_statut(){\n        let data_to_send = {\"type\": \"get\"};\n        let headers = {'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n              'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        fetch(\"http://localhost:3000/statut\", {\n          method: 'post',\n          headers,\n          body: JSON.stringify(data_to_send)\n\n        })\n        .then(res=> res.json())\n        .then(data => {\n          //console.log(JSON.stringify(data));\n          if(data.data.statut == 1)\n            this.statut = \"En cours\";\n          else \n            this.statut = \"Arrêt\";\n        });\n      }\n    }\n  }\n</script>\n"]}]}