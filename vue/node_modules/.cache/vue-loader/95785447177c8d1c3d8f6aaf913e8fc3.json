{"remainingRequest":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Main.vue","mtime":1585359028931},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847125793},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js","mtime":1583847125770},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js","mtime":1583847126586},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847125793},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js","mtime":1583847126556}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBHcmFwaGUgZnJvbSAnLi9HcmFwaGUudnVlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ01haW4nLAogIGNvbXBvbmVudHM6IHsKICAgIEdyYXBoZSwKICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICB0aW1lcjogdW5kZWZpbmVkLAogICAgc3RhdHV0OiAiQ29uZmlndXJhdGlvbiBub24gY2hhcmfDqWUiLAogICAgY29uZmlndXJhdGlvbjogIkF1Y3VuZSIsCiAgICBsYXJnZXVyX2J0bjogdW5kZWZpbmVkCiAgfQogICksCiAgbW91bnRlZCgpIHsKICAgIHRoaXMubGFyZ2V1cl9idG4gPSBNYXRoLmZsb29yKHdpbmRvdy5pbm5lcldpZHRoKi4xNSk7CiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwodGhpcy5nZXRfc3RhdHV0LCAxMDAwKTsKICAgIHRoaXMuZ2V0X2NvbmZpZ3VyYXRpb24oKTsKICB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24oKXsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgfSwKICBtZXRob2RzOnsKICAgIHN0YXJ0KCl7CiAgICAgIGlmKHRoaXMuc3RhdHV0ID09PSAnUHLDqnQnKXsKICAgICAgICBsZXQgZGF0YV90b19zZW5kID0gWyJzdGFydCJdOwogICAgICAgIGxldCBoZWFkZXJzID0geydBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicsCiAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnUE9TVCwgR0VULCBQVVQsIE9QVElPTlMsIERFTEVURScsCiAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOiAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcywgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luLCBPcmlnaW4sIEFjY2VwdCwgQ29udGVudC1UeXBlJywKICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgfQogICAgICAgIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAiLCB7CiAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgIGhlYWRlcnMsCiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhX3RvX3NlbmQpCgogICAgICAgIH0pCiAgICAgICAgLnRoZW4ocmVzPT4gcmVzLmpzb24oKSkKICAgICAgICAudGhlbihkYXRhID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRfc3RhdHV0KCl7CiAgICAgIGxldCBkYXRhX3RvX3NlbmQgPSBbImdldF9zdGF0dXQiXTsKICAgICAgbGV0IGhlYWRlcnMgPSB7J0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJywKICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnUE9TVCwgR0VULCBQVVQsIE9QVElPTlMsIERFTEVURScsCiAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJzogJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMsIEFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiwgT3JpZ2luLCBBY2NlcHQsIENvbnRlbnQtVHlwZScsCiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgIH0KICAgICAgZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCIsIHsKICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICBoZWFkZXJzLAogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGFfdG9fc2VuZCkKICAgICAgfSkKICAgICAgLnRoZW4ocmVzPT4gcmVzLmpzb24oKSkKICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgaWYoZGF0YVsxXS5zdGF0dXQgPT0gMSkKICAgICAgICAgIHRoaXMuc3RhdHV0ID0gIkVuIGNvdXJzIjsKICAgICAgICBlbHNlIGlmIChkYXRhWzFdLnN0YXR1dCA9PSAyKSB7CiAgICAgICAgICB0aGlzLnN0YXR1dCA9ICJDb25maWd1cmF0aW9uIG5vbiBjaGFyZ8OpZSI7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKGRhdGFbMV0uc3RhdHV0ID09IDMpewogICAgICAgICAgdGhpcy5zdGF0dXQgPSAiRW4gY2hhdWZmZSIKICAgICAgICB9CiAgICAgICAgZWxzZXsKICAgICAgICAgIHRoaXMuc3RhdHV0ID0gIlByw6p0IjsKICAgICAgICB9CiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5zdGF0dXQpOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRfY29uZmlndXJhdGlvbigpewogICAgICBsZXQgZGF0YV90b19zZW5kID0gWyJnZXRfY29uZmlndXJhdGlvbl9jb3VyYW50ZSJdOwogICAgICBsZXQgaGVhZGVycyA9IHsnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLAogICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcyc6ICdQT1NULCBHRVQsIFBVVCwgT1BUSU9OUywgREVMRVRFJywKICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOiAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcywgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luLCBPcmlnaW4sIEFjY2VwdCwgQ29udGVudC1UeXBlJywKICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgfQogICAgICBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwIiwgewogICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgIGhlYWRlcnMsCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YV90b19zZW5kKQogICAgICB9KQogICAgICAudGhlbihyZXM9PiByZXMuanNvbigpKQogICAgICAudGhlbihkYXRhID0+IHsKICAgICAgICBpZihkYXRhWzFdID09PSBudWxsKXsKICAgICAgICAgIHRoaXMuY29uZmlndXJhdGlvbiA9ICJBdWN1bmUgKFZldWlsbGV6IHPDqWxlY3Rpb25uZXogdW5lIGNvbmZpZ3VyYXRpb24pIjsKICAgICAgICB9CiAgICAgICAgZWxzZXsKICAgICAgICAgIHRoaXMuY29uZmlndXJhdGlvbiA9IGRhdGFbMV0ubm9tOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container text-center>\n    <v-row>\n      <v-col cols=\"3\">\n      </v-col>\n      <v-col cols=\"6\">\n        <v-card outlined>\n          <h1>{{configuration}}</h1>\n        </v-card>\n      </v-col>\n      <v-col cols=\"3\">\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"1\">\n      </v-col>\n      <v-col cols=\"6\">\n        <Graphe/>\n      </v-col>\n      <v-col cols=\"2\">\n      </v-col>\n      <v-col cols=\"3\">\n        <v-btn dark x-large fab right color=\"green\" @click=\"start()\" style=\"margin-top:200px\">\n          <v-img v-if=\"statut==='Prêt'\"\n            :src=\"require('../assets/start.jpg')\"\n            contain\n            :width=\"largeur_btn\"\n          />\n          <v-img v-else\n            :src=\"require('../assets/start_inactive.jpg')\"\n            contain\n            :width=\"largeur_btn\"\n          />\n        </v-btn>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"1\">\n      </v-col>\n      <v-col cols=\"6\">\n        <v-card v-if=\"statut === 'Prêt'\" outlined color=green>\n          <h1>{{statut}}</h1>\n        </v-card>\n        <v-card v-else-if=\"statut === 'Configuration non chargée'\" outlined color=red>\n          <h1>{{statut}}</h1>\n        </v-card>\n        <v-card v-else outlined color=orange>\n          <h1>{{statut}}</h1>\n        </v-card>\n      </v-col>\n      <v-col cols=\"3\">\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import Graphe from './Graphe.vue'\n  export default {\n    name: 'Main',\n    components: {\n      Graphe,\n    },\n    data: () => ({\n      timer: undefined,\n      statut: \"Configuration non chargée\",\n      configuration: \"Aucune\",\n      largeur_btn: undefined\n    }\n    ),\n    mounted() {\n      this.largeur_btn = Math.floor(window.innerWidth*.15);\n      this.timer = setInterval(this.get_statut, 1000);\n      this.get_configuration();\n    },\n    destroyed: function(){\n      clearInterval(this.timer);\n    },\n    methods:{\n      start(){\n        if(this.statut === 'Prêt'){\n          let data_to_send = [\"start\"];\n          let headers = {'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n                'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n              }\n          fetch(\"http://localhost:3000\", {\n            method: 'post',\n            headers,\n            body: JSON.stringify(data_to_send)\n\n          })\n          .then(res=> res.json())\n          .then(data => {\n            console.log(JSON.stringify(data));\n\n          });\n        }\n      },\n      get_statut(){\n        let data_to_send = [\"get_statut\"];\n        let headers = {'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n              'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        fetch(\"http://localhost:3000\", {\n          method: 'post',\n          headers,\n          body: JSON.stringify(data_to_send)\n        })\n        .then(res=> res.json())\n        .then(data => {\n          if(data[1].statut == 1)\n            this.statut = \"En cours\";\n          else if (data[1].statut == 2) {\n            this.statut = \"Configuration non chargée\";\n          }\n          else if (data[1].statut == 3){\n            this.statut = \"En chauffe\"\n          }\n          else{\n            this.statut = \"Prêt\";\n          }\n          // console.log(this.statut);\n        });\n      },\n      get_configuration(){\n        let data_to_send = [\"get_configuration_courante\"];\n        let headers = {'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n              'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        fetch(\"http://localhost:3000\", {\n          method: 'post',\n          headers,\n          body: JSON.stringify(data_to_send)\n        })\n        .then(res=> res.json())\n        .then(data => {\n          if(data[1] === null){\n            this.configuration = \"Aucune (Veuillez sélectionnez une configuration)\";\n          }\n          else{\n            this.configuration = data[1].nom;\n          }\n        });\n      }\n    }\n  }\n</script>\n"]}]}